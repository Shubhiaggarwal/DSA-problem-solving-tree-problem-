/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> result;
        if(root == nullptr){
            return result;
        }
        queue<TreeNode*> q1;
        q1.push(root);
        while(!q1.empty()){
             int listsize = q1.size();
             vector<int> level;
             for(int i=0;i<listsize;i++){
                TreeNode* currentnode  = q1.front();
                level.push_back(currentnode->val);
             q1.pop();
                if(currentnode->left!=nullptr){
                    q1.push(currentnode->left);
                }
                if(currentnode->right!=nullptr){
                    q1.push(currentnode->right);
                }
             }
             result.push_back(level);
             
        }
        reverse(result.begin(),result.end());
        return result;
    }
};
