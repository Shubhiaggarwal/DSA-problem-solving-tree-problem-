/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double> result;
        if(root == nullptr){
            return result;
        }
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
           int levelsize = q.size();
           double average = 0;
           for(int i=0;i<levelsize;i++){
            TreeNode* currentnode = q.front();
            average = average+(currentnode->val);
            q.pop();
            if(currentnode->left!=nullptr){
                q.push(currentnode->left);
            }
            if(currentnode->right!=nullptr){
                q.push(currentnode->right);
            }
           }
           average = average/levelsize;
           result.push_back(average);
        }
         return result;
    }
};
